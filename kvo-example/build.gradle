apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion sdk_version as int



    defaultConfig {
        minSdkVersion 15
        targetSdkVersion sdk_version as int
        versionCode 1
        versionName "1.0"


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion = '28.0.3'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.github.drumge:kvo-api:${kvo_api_version}"
    implementation "com.github.drumge:kvo-annotation:${kvo_annotation_version}"

    kapt "com.github.drumge:kvo-compiler:${kvo_compiler_version}"
//    annotationProcessor "com.github.drumge:kvo-compiler:${kvo_compiler_version}"
//    implementation "com.github.drumge:kvo-compiler:${kvo_compiler_version}"
//    kapt project(':kvo-compiler')

    project(':base')
    project(':kvo-lib-example-java')

}

///*
import com.android.build.gradle.internal.pipeline.TransformManager
import com.drumge.kvo.plugin.KvoPlugin
import com.drumge.kvo.plugin.extend.KvoExtend

apply plugin: 'com.drumge.easy.plugin'

easy_plugin {
    enable = true

    transformInputTypes(TransformManager.CONTENT_CLASS)
    transformScopes(TransformManager.PROJECT_ONLY)

    plugins{
        kvo {
            plugin = new KvoPlugin(project)
            extend = KvoExtend.createExtend(project) {
                it.logLevel = 4
            }
        }
    }
}
//*/

task ket {
    doLast {
        println()
        println('========  doLast  =========')
        println(it.properties)
        println()
    }
}

allprojects.each { p ->
    p.afterEvaluate {
        p.tasks.each {


            it.doLast {
                println('---------------------')
                println(' -- do last ' + it)
                println(' -- do last inputs ' + it.inputs.files.files)
                println(' -- do last outputs ' + it.outputs.files.files)

                println('---------------------')
                println()
            }
        }
    }
    p.gradle.taskGraph.afterTask {
        println('---------------------')
        println(' -- afterTask  ' + it)
    }
}


